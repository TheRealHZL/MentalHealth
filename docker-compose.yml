version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mindbridge-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: mindbridge_user
      POSTGRES_PASSWORD: mindbridge_secure_password_change_me
      POSTGRES_DB: mindbridge_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mindbridge_user -d mindbridge_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - mindbridge-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: mindbridge-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mindbridge-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mindbridge-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Application
      ENVIRONMENT: development
      DEBUG: "true"
      HOST: 0.0.0.0
      PORT: 8080

      # Database
      DATABASE_URL: postgresql+asyncpg://mindbridge_user:mindbridge_secure_password_change_me@postgres:5432/mindbridge_db
      DATABASE_ECHO: "false"

      # Redis
      REDIS_URL: redis://redis:6379/0

      # Security
      SECRET_KEY: your-super-secret-key-change-in-production-minimum-32-chars
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_HOURS: 24
      REFRESH_TOKEN_EXPIRE_DAYS: 7

      # CORS
      ALLOWED_HOSTS: "*"
      CORS_ORIGINS: "*"
      HTTPS_ONLY: "false"

      # AI Configuration
      AI_ENGINE_ENABLED: "true"
      AI_DEVICE: cpu
      AI_TEMPERATURE: "0.7"
      AI_TOP_P: "0.9"
      AI_TOP_K: "50"
      AI_MAX_LENGTH: "512"
      MAX_RESPONSE_LENGTH: "300"

      # Model Paths
      TOKENIZER_PATH: /app/data/models/tokenizer.pkl
      EMOTION_MODEL_PATH: /app/data/models/emotion_classifier.pt
      MOOD_MODEL_PATH: /app/data/models/mood_predictor.pt
      CHAT_MODEL_PATH: /app/data/models/chat_generator.pt

      # Model Architecture
      VOCAB_SIZE: "10000"
      EMBEDDING_DIM: "128"
      HIDDEN_DIM: "256"
      NUM_LAYERS: "2"
      NUM_HEADS: "8"
      FF_DIM: "512"
      DROPOUT_RATE: "0.1"

      # Rate Limiting
      RATE_LIMIT_ENABLED: "true"
      DEFAULT_RATE_LIMIT: "100"
      AUTH_RATE_LIMIT: "5"

      # Logging
      LOG_LEVEL: INFO
      ANALYTICS_ENABLED: "true"

      # Feature Flags
      THERAPIST_VERIFICATION_REQUIRED: "true"
      EMAIL_VERIFICATION_REQUIRED: "false"
      SHARING_ENABLED: "true"

      # Business Logic
      MAX_MOOD_ENTRIES_PER_DAY: "10"
      MAX_DREAM_ENTRIES_PER_DAY: "5"
      MAX_THERAPY_NOTES_PER_DAY: "20"
      DEFAULT_SHARE_KEY_EXPIRY_DAYS: "90"

    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - mindbridge-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mindbridge-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXT_TELEMETRY_DISABLED: "1"
      NEXT_PUBLIC_API_URL: http://localhost:8080
      NEXT_PUBLIC_API_VERSION: v1
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - mindbridge-network

  # pgAdmin (Optional - Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mindbridge-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mindbridge.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - mindbridge-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  mindbridge-network:
    driver: bridge
